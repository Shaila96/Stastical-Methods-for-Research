hist_plt <- ggplot(data = movie_data_csv, aes(x=BudgetMillions))
hist_plt + geom_histogram(binwidth=10)
hist_plt + geom_histogram(binwidth=10, fill="Red")
hist_plt + geom_histogram(binwidth=10, aes(fill=Genre))
hist_plt + geom_histogram(binwidth=10, aes(fill=Genre), colour="Black")
#Density
density_plt <- ggplot(data = movie_data_csv, aes(x=BudgetMillions))
density_plt + geom_density()
density_plt + geom_density(aes(fill=Genre))
density_plt + geom_density(aes(fill=Genre), position="stack")
#------------------ Starting Layer Tips
hist_plt <- ggplot(data = movie_data_csv, aes(x=AudienceRating))
hist_plt + geom_histogram(binwidth=10, fill="Grey", colour="Black")
hist_plt <- ggplot(data = movie_data_csv)
hist_plt + geom_histogram(aes(x=AudienceRating),
binwidth=10,
fill="Grey",
colour="Black")
hist_plt + geom_histogram(aes(x=CriticRating),
binwidth=10,
fill="Grey",
colour="Black")
#------------------ Statistical Transformation
#Smoothing
?geom_smooth
plt <- ggplot(data = movie_data_csv, aes(x=CriticRating,
y=AudienceRating,
colour=Genre))
plt + geom_point()
plt + geom_point() + geom_smooth()
plt + geom_point() + geom_smooth(fill=NA)
#Boxplots
box_plt <- ggplot(data = movie_data_csv, aes(x=Genre,
y=AudienceRating,
colour=Genre))
box_plt + geom_point()
box_plt + geom_boxplot()
box_plt + geom_boxplot(size=1.2)
box_plt + geom_boxplot(size=1.2) + geom_point()
#Tips
box_plt + geom_boxplot(size=1.2) + geom_jitter()
box_plt + geom_jitter() + geom_boxplot(size=1.2)
box_plt + geom_jitter() + geom_boxplot(size=1.2, alpha=0.4)
#Same plot for CriticRating
box_plt +
geom_jitter() +
geom_boxplot(size=1.2, alpha=0.4, aes(y=CriticRating))
#------------------ Using Facets
hist_plt <- ggplot(data = movie_data_csv,
aes(x=BudgetMillions))
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black")
#Facets
#xxx~.
#By Row
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.)
#~.xxx
#By Column
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") +
facet_grid(.~Genre)
#Scaling Facets
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") +
facet_grid(Genre~.)
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") +
facet_grid(Genre~., scales="free")
#Scatter Plot
scatter_plt <- ggplot(data = movie_data_csv,
aes(x=CriticRating,
y=AudienceRating,
colour=Genre))
scatter_plt + geom_point(size=3)
#Scatter Plot Facets
scatter_plt + geom_point(size=3) + facet_grid(Genre~.)
scatter_plt + geom_point(size=3) + facet_grid(.~Year)
scatter_plt + geom_point(size=3) + facet_grid(Genre~Year)
scatter_plt +
geom_point(aes(size=BudgetMillions)) +
facet_grid(Genre~Year) +
geom_smooth()
#------------------ Coordinates
#Limit
plt <- ggplot(data = movie_data_csv,
aes(x=CriticRating,
y=AudienceRating,
colour=Genre))
plt + geom_point()
plt +
geom_point() +
xlim(50, 100) +
ylim(50, 100)
#Limit doesn't work well always
hist_plt <- ggplot(data = movie_data_csv,
aes(x=BudgetMillions))
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black")
#Works well
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") + xlim(0,50)
#Does not work well
#Some data is missing
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") + ylim(0,50)
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") + ylim(50,100)
#Zooming
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") +
coord_cartesian(ylim=c(50,100))
hist_plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black") +
coord_cartesian(ylim=c(0,50))
#Improvement:
scatter_plt +
geom_point(aes(size=BudgetMillions)) +
facet_grid(Genre~Year) +
geom_smooth()
scatter_plt +
geom_point(aes(size=BudgetMillions)) +
facet_grid(Genre~Year) +
geom_smooth() +
coord_cartesian(ylim=c(0,100))
#------------------ Theme
plt <- ggplot(data = movie_data_csv,
aes(x=BudgetMillions))
hist_plt <- plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black")
hist_plt +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="Dark Green", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20))
?theme
#Legend Formatting
hist_plt +
xlab("Money Axis") +
ylab("Number of Movies") +
ggtitle("Movie Budget Distribution") +
theme(axis.title.x=element_text(colour="Dark Green", size=15),
axis.title.y=element_text(colour="Red", size=15),
axis.text.x=element_text(size=12),
axis.text.y=element_text(size=12),
legend.title=element_text(size=15),
legend.text=element_text(size=12),
legend.position=c(1,1),
legend.justification=c(1,1),
plot.title=element_text(colour="DarkBlue",
size=20,
family="Courier")
)
plt <- ggplot(data = movie_data_csv,
aes(x=BudgetMillions))
hist_plt <- plt + geom_histogram(binwidth=10,
aes(fill=Genre),
colour="Black")
hist_plt +
xlab("Money Axis") +
ylab("Number of Movies") +
theme(axis.title.x=element_text(colour="Dark Green", size=30),
axis.title.y=element_text(colour="Red", size=30),
axis.text.x=element_text(size=20),
axis.text.y=element_text(size=20))
helo.search("distribution")
help.search("distribution")
fx = dnorm(x)
x = seq(-4, 4, length=100)
fx = dnorm(x)
x = seq(-4, 4, length=100)
fx = dnorm(x)
plot(x, fx, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
# ggplot
df = data.frame(x, y=fx)
ggplot(df, aes(x,y)) + geom_line(linetype="dashed")
+ xlab("x value") + ylab("Density")
+ theme(text= element_text(size=20))
plot(x, fx, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
plot(x, fx, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
ggplot(df, aes(x,y)) + geom_line(linetype="dashed")
fx2 = dnorm(x=0, sd=0.5)
plot(x, fx2, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
fx2 = dnorm(x=0, sd=0.5)
plot(x, fx2, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
fx2 = dnorm(x, mean=0,sd=0.5)
plot(x, fx2, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, fx2, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
# par(mfrow=c(2,2))
fx2 = dnorm(x, mean=0,sd=0.5)
lines(x, fx2, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
fx2 = dnorm(x, mean=0,sd=0.5)
lines(x, fx2, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, dnorm(x, mean=0,sd=1), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, dnorm(x, mean=-2,sd=0.75), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, dnorm(x, mean=0,sd=0.5), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution", col("Red"))
lines(x, dnorm(x, mean=0,sd=0.5), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution", col=Red)
# fx2 = dnorm(x, mean=0,sd=0.5)
lines(x, dnorm(x, mean=0,sd=0.5), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution", col="Red")
lines(x, dnorm(x, mean=0,sd=1), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, dnorm(x, mean=0,sd=2), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, dnorm(x, mean=-2,sd=0.75), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution")
lines(x, dnorm(x, mean=0,sd=1), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution", col="blue")
lines(x, dnorm(x, mean=0,sd=2), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution", col="green")
lines(x, dnorm(x, mean=-2,sd=0.75), type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distribution", col="yellow")
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d2 = data.frame(D='N(0, 1)', x, y=dnorm(x))
d3 = data.frame(D='N(0, 2)', x, y=dnorm(x,0,2))
d4 = data.frame(D='N(-2, 0.75)', x, y=dnorm(x,-2,0.75))
d = rbind(d1, d2, d3, d4)
ggplot(d, aes(x, y, col=D))
+ geom_line(aes(linetype=D))
+ xlab("x value") + ylab("Density")
+ theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
y <- rnorm(200)
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.5)
y <- rnorm(2000)
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.5)
y <- rnorm(20000)
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.5)
y <- rnorm(20000)
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.5)
qplot(y, binwidth=0.1)
y <- rnorm(20000)
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.1)
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="violet")
x1=seq(-2,2,length=200)
y1=dnorm(x1)
polygon(c(-2,x1,2),c(0,y1,0),col="light gray")
# ggplot
shade = data.frame(x=c(-2,x1,2),y=c(0,y1,0))
ggplot(df, aes(x,y)) + geom_line()
+ geom_polygon(data=shade, aes(x,y), fill="dark grey")
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="violet")
x1=seq(-2,2,length=200)
y1=dnorm(x1)
polygon(c(-2,x1,2),c(0,y1,0),col="light gray")
# ggplot
shade = data.frame(x=c(-2,x1,2),y=c(0,y1,0))
ggplot(df, aes(x,y)) + geom_line()
+ geom_polygon(data=shade, aes(x,y), fill="blue")
# ggplot
shade = data.frame(x=c(-2,x1,2),y=c(0,y1,0))
ggplot(df, aes(x,y)) + geom_line()
+ geom_polygon(data=shade, aes(x,y), fill="blue")
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="violet")
x1=seq(-2,2,length=200)
y1=dnorm(x1)
polygon(c(-2,x1,2),c(0,y1,0),col="light gray")
# ggplot
shade = data.frame(x=c(-2,x1,2),y=c(0,y1,0))
ggplot(df, aes(x,y)) + geom_line()
+ geom_polygon(data=shade, aes(x,y), fill="blue")
ggplot(df, aes(x,y)) + geom_line()
+ geom_polygon(data=shade, aes(x,y), fill="blue")
ggplot(df, aes(x,y)) + geom_line() + geom_polygon(data=shade, aes(x,y), fill="blue")
ggplot(df, aes(x,y)) + geom_line() + geom_polygon(data=shade, aes(x,y), fill="light blue")
dbinom(4, size=10, prob=0.25)
dbinom(4, size=10, prob=0.25) +
dbinom(3, size=10, prob=0.25) +
dbinom(2, size=10, prob=0.25) +
dbinom(1, size=10, prob=0.25) +
dbinom(0, size=10, prob=0.25)
pbinom(4, size=10, prob=0.25)
?pnorm
pnorm(85, mean=79, sd=13.1)
pnorm(85, mean=79, sd=13.1, lower.tail=FALSE)
z=(xbar-mu0)/(sigma/sqrt(n))
xbar=9900
mu0=10000
sigma=120
n=30
z=(xbar-mu0)/(sigma/sqrt(n))
z
z = c(1:10)
z
y = scan()
y = scan()
y
?c
help(c)
current_dir = getwd()
current_dir = getwd()
current_dir
dir.create("testdir")
list.files()
setwd("testdir")
current_dir = getwd()
current_dir
unlink("testdir")
list.files()
setwd(current_dir)
unlink("testdir")
list.files()
current_dir = getwd()
current_dir
dir.create("testdir")
list.files()
setwd("testdir")
current_dir = getwd()
current_dir
setwd(current_dir)
unlink("testdir", recursive = TRUE)
list.files()
dir.create("testdir2/testdir3", recursive = TRUE)
unlink("testdir2", recursive = TRUE)
list.files()
current_dir = getwd()
current_dir
dirname(dirname(current_dir))
setwd(dirname(dirname(current_dir)))
current_dir = getwd()
current_dir
unlink("testdir")
list.files()
unlink("testdir", recursive = TRUE)
list.files()
dir.create("testdir2/testdir3", recursive = TRUE)
list.files()
unlink("testdir2", recursive = TRUE)
list.files()
x = 5
class(x)
is.integer(x)
is.numeric(x)
y1 = as.integer(3.25)
is.integer(y1)
y1
y2 = as.integer("3.25")
is.integer(y2)
y2
y3 = as.integer("abc")
is.integer(y3)
y3
is.integer(1:10)
is.integer("a":"c")
sqrt(-1)
z <- sqrt(-1)
Z
z <- sqrt(-1+0i)
z
sqrt(as.complex(-1))
Help(c)
comparison1 = x > y
comparison1
x=4
y=10
z=6
comparison1 = x > y
comparison1
comparison2 = y > z
comparison2
comparison1 | comparison2
bool = T
bool
x = as.character(5.16)
x
class(x)
fname = "Shaila"; lname="Zaman"
paste(fname, lname)
name = paste(fname, lname)
name
paste0(fname, lname, 3)
collaspe(fname, lname, 3)
seq1 = rep(c(1,2), each=3)
seq1
seq2 = rep(c(1,2), times=3)
seq2
sort(seq2)
sort(seq2) == seq1
seq1 == seq2
identical(seq1, seq2)
identical(seq1, sort(seq2))
temp = x > 13
temp
x = x * 2 + 100
x
y = sqrt(x)
x
x
y = sqrt(x)
x = c(5.4, 3.6, 3.2, 1.4, 14, 22.7)
temp = x > 13
temp
x = x * 2 + 100
x
y = sqrt(x)
x
y
recycling = c(1,2,3,4) + c(0,10)
recycling
recycling = c(1,2,3,4,5,6) + c(0,10)
recycling
paste(LETTERS, 1:4, sep="-")
paste0(LETTERS, 1:4, sep=" ")
paste0(LETTERS, 1:4, sep="/")
my_char = c("my","name","is")
paste(my_char, collapse=" ")
s = c(11, 22, 33, 44, 55)
s[2:4]
s[2:4]
s[1,2:4]  #It is not any vector, will return error
s[c(4,5,1)]
s[c(2, 4:5)]
s[rep(3,3)]
s[c(TRUE, FALSE)]
length(s)
x = c(1:5,NA)
x
indices = is.na(x)
indices
0/0
Inf
is.infinite(Inf)
is.na() #for both NA and NaN
x = c(1:5,NA)
y = sort(x)
y
z=1:20
#Dimension
dim(z) = c(4,5)
z
which(z<10)
my_mat = matrix(c(1:20), nrow=4, ncol=5)
my_mat
identical(my_mat, z)
nrow(z)
ncol(z)
nrow(z)
ncol(z)
for(i in 1:ncol(z)) {
print("a")
}
patients = c ("a", "b", "c", "d")
cbind(patients, my_mat)  #Converts into character matrix
class(my_mat)
my_data = data.frame(patients, my_mat)
my_data
class(my_data)
cnames = c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) = cnames
my_data
x = c(1,2,3)
y = c(44,55,66)
z = c("d", "e", "f")
a=c(x,y,z)
b=list(x,y,z)
c(x,y,z)
list(x,y,z)
b
a
summary(my_data)
mean(z)
sd(z)
v = list(alan=c(1,2,3), james=c("ab", "cd"))
v
mean(my_data)
summary(x)
mean(x)
sd(x)
?lm
x=c(1,2,3,4,5,5,5,6)
boxplot(x, xlab="x label", ylab="y label")
title("Boxplot Figure")
