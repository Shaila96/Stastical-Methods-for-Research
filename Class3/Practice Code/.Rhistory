draw_line(y1, "red")
draw_line(y2, "blue")
draw_line(y3, "green")
draw_line(y4, "yellow")
plot(x, dnorm(x,mean=0,sd=0.5), type="l", lty=1 ,
xlab="x value", ylab="Density",
main="Normal Distributions with different parameters",
col='dark green')
draw_line(y1, "red")
draw_line(y2, "blue")
draw_line(y3, "green")
draw_line(y4, "yellow")
plot(x, dnorm(x,mean=0,sd=0.5), type="l", lty=1 ,
xlab="x value", ylab="Density",
main="Normal Distributions with different parameters",
col="red")
draw_line(y1, "red")
draw_line(y2, "blue")
draw_line(y3, "green")
draw_line(y4, "yellow")
plot(x, dnorm(x,mean=0,sd=0.5), type="l", lty=1 ,
xlab="x value", ylab="Density",
main="Normal Distributions with different parameters",
col="red")
# draw_line(y1, "red")
draw_line(y2, "blue")
draw_line(y3, "green")
draw_line(y4, "yellow")
draw_line = function(y_val, lty_val, color) {
lines(x=x,
y=y_val,
type="l",
lty=lty_val,
xlab="x value",
ylab="Density",
main="Normal Distribution",
col=color)
}
y1 = dnorm(x, mean=0,sd=0.5)
y2 = dnorm(x, mean=0,sd=1)
y3 = dnorm(x, mean=0,sd=2)
y4 = dnorm(x, mean=-2,sd=0.75)
plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with different parameters",
col="red")
# draw_line(y1, "red")
draw_line(y2, 2, "blue")
draw_line(y3, 3, "green")
draw_line(y4, 4, "yellow")
?legend
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
legend('topright',
inset=.05,
title="Distributions",
labels=labels,
lty=linetypes,
col=colors)
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
legend('topright',
inset=.05,
title="Distributions",
label=labels,
lty=linetypes,
col=colors)
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
legend('topright',
inset=.05,
title="Distributions",
labels,
lty=linetypes,
col=colors)
legend('topright',
inset=.005,
title="Distributions",
labels,
lty=linetypes,
col=colors)
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
current_dir = "T:\\Google Drive\\University of Houston\\CS - UH\\@@Spring 2018\\Statistical Methods for Research\\Class3\\Practice Code"
export_png = function(directory, png_name) {
getwd()
setwd(directory)
png(filename=png_name)
# png(directory + "\\" + png_name)
plot(normal_distribution_plot)
dev.off()
}
export_png(current_dir, "Normal_Distribution_Plot22.png")
current_dir = "T:\\Google Drive\\University of Houston\\CS - UH\\@@Spring 2018\\Statistical Methods for Research\\Class3\\Practice Code"
export_png = function(directory, png_name) {
# getwd()
# setwd(directory)
# png(filename=png_name)
png(directory + "\\" + png_name)
plot(normal_distribution_plot)
dev.off()
}
export_png(current_dir, "Normal_Distribution_Plot22.png")
current_dir = "T:\\Google Drive\\University of Houston\\CS - UH\\@@Spring 2018\\Statistical Methods for Research\\Class3\\Practice Code"
export_png = function(directory, png_name) {
# getwd()
# setwd(directory)
# png(filename=png_name)
png(paste(directory, "\\", png_name))
plot(normal_distribution_plot)
dev.off()
}
export_png(current_dir, "Normal_Distribution_Plot22.png")
current_dir = "T:\\Google Drive\\University of Houston\\CS - UH\\@@Spring 2018\\Statistical Methods for Research\\Class3\\Practice Code"
export_png = function(directory, png_name) {
# getwd()
# setwd(directory)
# png(filename=png_name)
png(filename=paste(directory, "\\", png_name))
plot(normal_distribution_plot)
dev.off()
}
export_png(current_dir, "Normal_Distribution_Plot22.png")
current_dir = "T:\\Google Drive\\University of Houston\\CS - UH\\@@Spring 2018\\Statistical Methods for Research\\Class3\\Practice Code"
export_png = function(directory, png_name) {
setwd(directory)
png(filename=png_name)
plot(normal_distribution_plot)
dev.off()
}
export_png(current_dir, "Normal_Distribution_Plot22.png")
dev.off()
dev.off
plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with different parameters",
col="red")
# draw_line(y1, "red")
draw_line(y2, 2, "blue")
draw_line(y3, 3, "green")
draw_line(y4, 4, "yellow")
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
dev.off
plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with different parameters",
col="red")
# draw_line(y1, "red")
draw_line(y2, 2, "blue")
draw_line(y3, 3, "green")
draw_line(y4, 4, "yellow")
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
current_dir = "T:\\Google Drive\\University of Houston\\CS - UH\\@@Spring 2018\\Statistical Methods for Research\\Class3\\Practice Code"
export_png = function(directory, png_name) {
setwd(directory)
png(filename=png_name)
plot(normal_distribution_plot)
dev.off()
}
export_png(current_dir, "Normal_Distribution_Plot.png")
#--------------------- Normal Distribution Exercise
draw_line = function(y_val, lty_val, color) {
lines(x=x,
y=y_val,
type="l",
lty=lty_val,
xlab="x value",
ylab="Density",
main="Normal Distribution",
col=color)
}
y1 = dnorm(x, mean=0,sd=0.5)
y2 = dnorm(x, mean=0,sd=1)
y3 = dnorm(x, mean=0,sd=2)
y4 = dnorm(x, mean=-2,sd=0.75)
dev.off
plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with Different Parameters",
col="red")
# draw_line(y1, "red")
draw_line(y2, 2, "blue")
draw_line(y3, 3, "green")
draw_line(y4, 4, "yellow")
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
export_png(current_dir, "Normal_Distribution_Diff_Parameters_Plot.png")
#--------------------- Normal Distribution Exercise
draw_line = function(y_val, lty_val, color) {
lines(x=x,
y=y_val,
type="l",
lty=lty_val,
xlab="x value",
ylab="Density",
main="Normal Distribution",
col=color)
}
y1 = dnorm(x, mean=0,sd=0.5)
y2 = dnorm(x, mean=0,sd=1)
y3 = dnorm(x, mean=0,sd=2)
y4 = dnorm(x, mean=-2,sd=0.75)
dev.off()
base_plot = plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with Different Parameters",
col="red")
# draw_line(y1, "red")
base_plot = base_plot +
draw_line(y2, 2, "blue") +
draw_line(y3, 3, "green") +
draw_line(y4, 4, "yellow")
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
base_plot = base_plot +
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
base_plot
export_png(base_plot, current_dir, "Normal_Distribution_Diff_Parameters_Plot.png")
base_plot
base_plot = base_plot +
draw_line(y2, 2, "blue") +
draw_line(y3, 3, "green") +
draw_line(y4, 4, "yellow")
dev.off()
base_plot = plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with Different Parameters",
col="red")
base_plot = base_plot +
draw_line(y2, 2, "blue") +
draw_line(y3, 3, "green") +
draw_line(y4, 4, "yellow")
labels <- c('N(0, 0.5)', 'N(0, 1)', 'N(0, 2)', 'N(-2, 0.75)')
colors <- c('red','blue','green','yellow')
linetypes <- c(1, 2, 3, 4)
?legend
base_plot = base_plot +
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
base_plot
export_png(base_plot, current_dir, "Normal_Distribution_Diff_Parameters_Plot.png")
base_plot = base_plot +
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
base_plot
export_png(base_plot, current_dir, "Normal_Distribution_Diff_Parameters_Plot.png")
dev.off()
base_plot = plot(x=x,
y=y1,
type="l",
lty=1,
xlab="x value",
ylab="Density",
main="Normal Distributions with Different Parameters",
col="red")
base_plot = base_plot +
draw_line(y2, 2, "blue") +
draw_line(y3, 3, "green") +
draw_line(y4, 4, "yellow")
base_plot
export_png(base_plot, current_dir, "Normal_Distribution_Diff_Parameters_Plot.png")
base_plot
legend('topright',
inset=.02,
title="Distributions",
labels,
lty=linetypes,
col=colors)
?data.frame
?data.frame
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d2 = data.frame(D='N(0, 1)', x, y=dnorm(x))
d3 = data.frame(D='N(0, 2)', x, y=dnorm(x,0,2))
d4 = data.frame(D='N(-2, 0.75)', x, y=dnorm(x,-2,0.75))
d = rbind(d1, d2, d3, d4)
ggplot(d, aes(x, y, col=D))
+ geom_line(aes(linetype=D))
+ xlab("x value") + ylab("Density")
+ theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d2 = data.frame(D='N(0, 1)', x, y=dnorm(x))
d3 = data.frame(D='N(0, 2)', x, y=dnorm(x,0,2))
d4 = data.frame(D='N(-2, 0.75)', x, y=dnorm(x,-2,0.75))
d = rbind(d1, d2, d3, d4)
ggplot(d, aes(x, y, col=D))
+ geom_line(aes(linetype=D))
+ theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
ggplot(d, aes(x, y, col=D))
+ geom_line(aes(linetype="D"))
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d2 = data.frame(D='N(0, 1)', x, y=dnorm(x))
d3 = data.frame(D='N(0, 2)', x, y=dnorm(x,0,2))
d4 = data.frame(D='N(-2, 0.75)', x, y=dnorm(x,-2,0.75))
d = rbind(d1, d2, d3, d4)
ggplot(d, aes(x, y, col=D))
+ geom_line(aes(linetype="D"))
+ xlab("x value")
+ ylab("Density")
+ theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d2 = data.frame(D='N(0, 1)', x, y=dnorm(x))
d3 = data.frame(D='N(0, 2)', x, y=dnorm(x,0,2))
d4 = data.frame(D='N(-2, 0.75)', x, y=dnorm(x,-2,0.75))
d = rbind(d1, d2, d3, d4)
ggplot(d, aes(x, y, col=d))
+ geom_line(aes(linetype=d))
+ xlab("x value")
+ ylab("Density")
+ theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d2 = data.frame(D='N(0, 1)', x, y=dnorm(x))
d3 = data.frame(D='N(0, 2)', x, y=dnorm(x,0,2))
d4 = data.frame(D='N(-2, 0.75)', x, y=dnorm(x,-2,0.75))
d = rbind(d1, d2, d3, d4)
ggplot(d, aes(x, y, col=d))
+ geom_line(aes(linetype=d))
+ xlab("x value")
+ ylab("Density")
ggplot(d, aes(x, y, col=d)) +
geom_line(aes(linetype=d)) +
xlab("x value")  +
ylab("Density") +
theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
?data.frame
d = rbind(d1, d2, d3, d4)
d
?ggplot
ggplot(data=d, aes(x, y, col=d))
ggplot(data=d, aes(x, y, col=D))
ggplot(data=d, aes(x, y, col=D)) +
geom_line(aes(linetype=d))
ggplot(data=d, aes(x, y, col=D)) +
geom_line(aes(linetype=D))
ggplot(data=d, aes(x, y, col=D)) +
geom_line(aes(linetype=D)) +
xlab("x value")  +
ylab("Density") +
theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
ggplot(data=d, aes(x, y, col=D)) +
geom_line(aes(linetype=D)) +
xlab("x value")  +
ylab("Density") +
theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
?ggplot
base_nd_ggplot = ggplot(data=d, mapping=aes(x, y, col=D))
base_nd_ggplot +
geom_line(aes(linetype=D)) +
xlab("x value")  +
ylab("Density") +
theme(legend.justification=c(1,1),
legend.position=c(1,1),
legend.background = element_rect(fill="transparent"))
d1 = data.frame(D='N(0, 0.5)', x, y=dnorm(x,0,0.5))
d1
pnorm(0)
?pnorm
pnorm(0, mean=2, sd=3)
pnorm(1)
pnorm(0)
pnorm(0, mean=2, sd=3)
pnorm(1)
use the lower :tail option:
y <- rnorm(20000)
pnorm(1, lower.tail=FALSE)
qnorm(0.5)
qnorm(0.5)
qnorm(0.5,mean=1,sd=2)
qnorm(0.5,mean=2,sd=2)
rnorm(4)
rnorm(4,mean=3,sd=3)
y <- rnorm(20000)
y
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.1)
y <- rnorm(200000)
hist(y, main="Histogram of rnorm")
qplot(y, binwidth=0.1)
qplot(y, binwidth=0.5)
pnorm(1)-pnorm(-1)
pnorm(2)-pnorm(-2)
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="violet")
x1=seq(-2,2,length=200)
y1=dnorm(x1)
polygon(c(-2,x1,2),c(0,y1,0),col="light gray")
x=seq(-4,4,length=200)
y=dnorm(x)
plot(x,y,type="l", lwd=2, col="violet")
x1=seq(-2,2,length=200)
y1=dnorm(x1)
polygon(c(-2,x1,2),c(0,y1,0),col="light gray")
?ploygon
??ploygon
?ploygon()
?ploygon
seq(-2,2,length=200)
c(-2,x1,2)
c(0,y1,0)
shade = data.frame(x=c(-2,x1,2),y=c(0,y1,0))
ggplot(df, aes(x,y)) + geom_line() + geom_polygon(data=shade, aes(x,y), fill="light blue")
geom_line()
ggplot(df, aes(x,y)) +
geom_line()
ggplot(df, aes(x,y)) +
geom_line() +
geom_polygon(data=shade, aes(x,y), fill="light blue")
.25)
pbinom(4, size=10, prob=0.25)
dpois(11, lambda=10)
?pnorm
pnorm(85, mean=79, sd=13.1)
pnorm(85, mean=79, sd=13.1, lower.tail=FALSE)
xbar=9900
mu0=10000
sigma=120
n=30
z=(xbar-mu0)/(sigma/sqrt(n))
z
z.alpha=qnorm(1-alpha)
alpha=.05
z.alpha=qnorm(1-alpha)
-z.alpha
